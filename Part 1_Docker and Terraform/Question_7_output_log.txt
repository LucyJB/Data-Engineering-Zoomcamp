zsh compinit: insecure directories, run compaudit for list.
Ignore insecure directories and continue [y] or abort compinit [n]? y
lucybufton@lb-MBP Terraform % 
lucybufton@lb-MBP Terraform % gcloud auth application-default login
Your browser has been opened to visit:

    https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=764086051850-6qr4p6gpi6hn506pt8ejuq83di341hur.apps.googleusercontent.com&redirect_uri=http%3A%2F%2Flocalhost%3A8085%2F&scope=openid+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fcloud-platform+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fsqlservice.login&state=KiscD15HINsSEWDPAizK72VuCME0TR&access_type=offline&code_challenge=bpKiZBsOQYSmD66dhu98OinT_ZXQ6ZYiiGAgnQkLBE0&code_challenge_method=S256


Credentials saved to file: [/Users/lucybufton/.config/gcloud/application_default_credentials.json]

These credentials will be used by any library that requests Application Default Credentials (ADC).

Quota project "calcium-alchemy-256812" was added to ADC which can be used by Google client libraries for billing and quota. Note that some services may still bill the project owning the resource.


Updates are available for some Google Cloud CLI components.  To install them,
please run:
  $ gcloud components update

lucybufton@lb-MBP Terraform % terraform init

Initializing the backend...

Initializing provider plugins...
- Reusing previous version of hashicorp/google from the dependency lock file
- Using previously-installed hashicorp/google v5.6.0

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
lucybufton@lb-MBP Terraform % terraform plan -var="project=calcium-alchemy-256812"
google_bigquery_dataset.demo_dataset: Refreshing state... [id=projects/calcium-alchemy-256812/datasets/demo_dataset]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the
following symbols:
  + create
  ~ update in-place

Terraform will perform the following actions:

  # google_bigquery_dataset.demo_dataset will be updated in-place
  ~ resource "google_bigquery_dataset" "demo_dataset" {
      - default_partition_expiration_ms = 5184000000 -> null
      - default_table_expiration_ms     = 5184000000 -> null
        id                              = "projects/calcium-alchemy-256812/datasets/demo_dataset"
        # (12 unchanged attributes hidden)

        # (4 unchanged blocks hidden)
    }

  # google_storage_bucket.demo-bucket will be created
  + resource "google_storage_bucket" "demo-bucket" {
      + effective_labels            = (known after apply)
      + force_destroy               = true
      + id                          = (known after apply)
      + location                    = "US"
      + name                        = "moonpig-hello-cat-camera"
      + project                     = (known after apply)
      + public_access_prevention    = (known after apply)
      + self_link                   = (known after apply)
      + storage_class               = "STANDARD"
      + terraform_labels            = (known after apply)
      + uniform_bucket_level_access = (known after apply)
      + url                         = (known after apply)

      + lifecycle_rule {
          + action {
              + type = "AbortIncompleteMultipartUpload"
            }
          + condition {
              + age                   = 1
              + matches_prefix        = []
              + matches_storage_class = []
              + matches_suffix        = []
              + with_state            = (known after apply)
            }
        }
    }

Plan: 1 to add, 1 to change, 0 to destroy.

───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't guarantee to take exactly these actions if you run
"terraform apply" now.
lucybufton@lb-MBP Terraform % terraform apply -var="project=calcium-alchemy-256812"
google_bigquery_dataset.demo_dataset: Refreshing state... [id=projects/calcium-alchemy-256812/datasets/demo_dataset]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the
following symbols:
  + create
  ~ update in-place

Terraform will perform the following actions:

  # google_bigquery_dataset.demo_dataset will be updated in-place
  ~ resource "google_bigquery_dataset" "demo_dataset" {
      - default_partition_expiration_ms = 5184000000 -> null
      - default_table_expiration_ms     = 5184000000 -> null
        id                              = "projects/calcium-alchemy-256812/datasets/demo_dataset"
        # (12 unchanged attributes hidden)

        # (4 unchanged blocks hidden)
    }

  # google_storage_bucket.demo-bucket will be created
  + resource "google_storage_bucket" "demo-bucket" {
      + effective_labels            = (known after apply)
      + force_destroy               = true
      + id                          = (known after apply)
      + location                    = "US"
      + name                        = "moonpig-hello-cat-camera"
      + project                     = (known after apply)
      + public_access_prevention    = (known after apply)
      + self_link                   = (known after apply)
      + storage_class               = "STANDARD"
      + terraform_labels            = (known after apply)
      + uniform_bucket_level_access = (known after apply)
      + url                         = (known after apply)

      + lifecycle_rule {
          + action {
              + type = "AbortIncompleteMultipartUpload"
            }
          + condition {
              + age                   = 1
              + matches_prefix        = []
              + matches_storage_class = []
              + matches_suffix        = []
              + with_state            = (known after apply)
            }
        }
    }

Plan: 1 to add, 1 to change, 0 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

google_storage_bucket.demo-bucket: Creating...
google_bigquery_dataset.demo_dataset: Modifying... [id=projects/calcium-alchemy-256812/datasets/demo_dataset]
google_bigquery_dataset.demo_dataset: Modifications complete after 1s [id=projects/calcium-alchemy-256812/datasets/demo_dataset]
╷
│ Error: googleapi: Error 409: Your previous request to create the named bucket succeeded and you already own it., conflict
│ 
│   with google_storage_bucket.demo-bucket,
│   on main.tf line 17, in resource "google_storage_bucket" "demo-bucket":
│   17: resource "google_storage_bucket" "demo-bucket" {
│ 
╵
lucybufton@lb-MBP Terraform % gsutil rm -r gs://moonpig-hello-cat-camera

Removing gs://moonpig-hello-cat-camera/...
lucybufton@lb-MBP Terraform % terraform apply -var="project=calcium-alchemy-256812"
google_bigquery_dataset.demo_dataset: Refreshing state... [id=projects/calcium-alchemy-256812/datasets/demo_dataset]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the
following symbols:
  + create

Terraform will perform the following actions:

  # google_storage_bucket.demo-bucket will be created
  + resource "google_storage_bucket" "demo-bucket" {
      + effective_labels            = (known after apply)
      + force_destroy               = true
      + id                          = (known after apply)
      + location                    = "US"
      + name                        = "moonpig-hello-cat-camera"
      + project                     = (known after apply)
      + public_access_prevention    = (known after apply)
      + self_link                   = (known after apply)
      + storage_class               = "STANDARD"
      + terraform_labels            = (known after apply)
      + uniform_bucket_level_access = (known after apply)
      + url                         = (known after apply)

      + lifecycle_rule {
          + action {
              + type = "AbortIncompleteMultipartUpload"
            }
          + condition {
              + age                   = 1
              + matches_prefix        = []
              + matches_storage_class = []
              + matches_suffix        = []
              + with_state            = (known after apply)
            }
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

google_storage_bucket.demo-bucket: Creating...
google_storage_bucket.demo-bucket: Creation complete after 2s [id=moonpig-hello-cat-camera]

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.
lucybufton@lb-MBP Terraform % terraform apply
google_bigquery_dataset.demo_dataset: Refreshing state... [id=projects/calcium-alchemy-256812/datasets/demo_dataset]
google_storage_bucket.demo-bucket: Refreshing state... [id=moonpig-hello-cat-camera]

No changes. Your infrastructure matches the configuration.

Terraform has compared your real infrastructure against your configuration and found no differences, so no changes are needed.

Apply complete! Resources: 0 added, 0 changed, 0 destroyed.
lucybufton@lb-MBP Terraform % 
